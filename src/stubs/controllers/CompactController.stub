<?php
namespace App\Http\Controllers\Backend;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\{{modelName}};
use DB;


class {{modelName}}Controller extends Controller
{
    public function index()
    {
        try{
            ${{modelNamePluralVar}}  = DB::table('{{tableName}}')
            {{joinSelectTables}}
            {{indexJoinTables}}
            ->orderBy('id', 'desc')
            ->paginate(20);
            return view("backend/{{address}}/index", compact("{{modelNamePluralVar}}"));
        }catch(\Exception $e){

            return back();
        }
    }
    public function create()
    {
        try{
            {{extraTables}}
            return view("backend/{{address}}/create", compact({{getCompact}}));
        }catch(\Exception $e){

            return back();
        }
    }
    public function store(Request $request, $role)
    {
        try{
            $this->validate($request, [
                {{controllerValidation}}
            ]);
            ${{modelNameSingularVar}} = DB::table('{{tableName}}')->insertGetId([
                    {{createControllerFields}}
                    'created_at'        =>      \Carbon\Carbon::now()->toDateTimeString(),
                    'updated_at'        =>      \Carbon\Carbon::now()->toDateTimeString(),
                ]
            );
            return back()->with('success','You have successfully inserted new {{modelNameSingularLowerCase}}');
        }catch(\Exception $e){

            return back()->with('error','Your record has been not submitted successfully ');
        }
    }
    public function show($role, $id)
    {
        try{
            ${{modelNameSingularVar}} = DB::table('{{tableName}}')
            {{joinSelectTables}}
            {{indexJoinTables}}
            ->where('{{tableName}}.id', $id)
            ->first();
            return view("backend/{{address}}/show", compact("{{modelNameSingularVar}}"));
        }catch(\Exception $e){

            return back();
        }
    }
    public function edit($role, $id)
    {
        try{

            {{extraTables}}
            ${{modelNameSingularVar}} =  DB::table('{{tableName}}')
            ->where('{{tableName}}.id', $id)
            ->first();
            return view("backend/{{address}}/edit", compact("{{modelNameSingularVar}}", {{getCompact}}));
        }catch(\Exception $e){

            return back();
        }

    }
    public function update(Request $request, $role)
    {
        try{
            $this->validate($request, [
                'id'  =>  'required',
                {{controllerValidation}}
            ]);

            ${{modelNameSingularVar}} =  DB::table('{{tableName}}')
            ->where('id', $request->id)
            ->update([
                {{createControllerFields}}
                'updated_at'        =>      \Carbon\Carbon::now()->toDateTimeString(),
            ]);
            return back()->with('success','You have successfully updated {{modelNameSingularLowerCase}}');
        }catch(\Exception $e){

            return back()->with('error','Your record has been not updated successfully');
        }
    }
    public function destroy($role, $id)
    {
        try{

            DB::table('{{tableName}}')->where('id', '=', $id)->delete();
            return redirect("admin/{{address}}")->with('success','Successfully delete {{modelNameSingularLowerCase}}');

        }catch(\Exception $e){

            return back()->with('error','{{modelNameSingularLowerCase}} was delete');
        }


    }
}
